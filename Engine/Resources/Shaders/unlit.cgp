uniform mat4 MVP;
uniform mat4 modelViewMat;

#ifdef use_mat_colour
    uniform vec4 _colourDiffuse;
#endif

ShaderTextures
{
    Texture2D inTexture;
}

// Vertex shader input
struct VSInput
{
    vec4 Position : POSITION;
    vec3 Normal : NORMAL;
    vec2 TexCoord : TEXCOORD;
}

// Fragment shader input
struct FSInput
{
    vec4 Position : SV_POSITION;
    vec2 TexCoord : TEXCOORD;
}

// Vertex shader
shader VertexShader
{
    void main(VSInput input, FSInput output)
    {
        output.Position = MVP * input.Position;
        output.TexCoord = input.TexCoord;
    }
}

// Fragment shader
shader FragmentShader
{
    void main(FSInput input)
    {
        vec4 col = vec4(0.0, 0.0, 0.0, 0.0);
    #ifdef use_mat_colour
        col = _colourDiffuse;
    #else
        col = ReadTexture(inTexture, input.TexCoord);
    #endif

        SetFragmentColour(col);
    }
}

